<UserControl x:Class="Poseidon.BackOffice.Core.Views.ModulesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:design="clr-namespace:Poseidon.BackOffice.Core.DesignTime"
             xmlns:core="clr-namespace:Poseidon.BackOffice.Core"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
             xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:pe="clr-namespace:Poseidon.Common.Wpf.Extensions;assembly=Poseidon.Common.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <core:ModulesViewModelLocator x:Key="ModulesViewModel" />

        <CollectionViewSource x:Key="ModulesCollection" Source="{Binding Modules}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Priority" />
                <!--<cm:SortDescription PropertyName="Title" />-->
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Parent.Title"></PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <Style x:Key="GroupItem.Module" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!--<Image Grid.ColumnSpan="2" Width="48" Height="48" Source="{Binding Parent.Image, RelativeSource={RelativeSource FindAncestor,}}}" />-->
                            <TextBlock Grid.Column="1" x:Name="parentName" Text="{Binding Path=Name, Mode=OneWay}" FontSize="20" Foreground="CornflowerBlue" />
                            <!--<TextBlock Grid.Column="0" x:Name="parentTitle" Text="{Binding Path=Title, Mode=OneWay}" FontSize="20" Foreground="CornflowerBlue" />-->
                            <!--<TextBlock Grid.Column="2" x:Name="count" Text="{Binding Path=Priority, Mode=OneWay}" FontSize="20" Foreground="CornflowerBlue" />-->
                            <ItemsControl Grid.Column="1" Grid.Row="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True" Orientation="Horizontal"
                                                   MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ListBox}, Mode=FindAncestor}}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsPresenter />
                            </ItemsControl>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBox.Modules" TargetType="{x:Type ListBox}">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
            <Setter Property="pe:GroupStyleExtension.GroupStyle">
                <Setter.Value>
                    <GroupStyle ContainerStyle="{StaticResource GroupItem.Module}">
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ItemTemplate.Module.Item" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <StackPanel ToolTip="{TemplateBinding ToolTip}" Orientation="Horizontal">
                            <Image Width="24" Height="24" Source="{Binding IconFileName}"/>
                            <TextBlock x:Name="menuText" VerticalAlignment="Center" Text="{Binding Title}" Foreground="BurlyWood"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ItemTemplate.Module">
            <Button Style="{StaticResource ItemTemplate.Module.Item}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding SelectedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </DataTemplate>

        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" ToolTip="{TemplateBinding ToolTip}" >
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <Binding Path="ViewModel" Source="{StaticResource ModulesViewModel}" />
    </UserControl.DataContext>
    <d:UserControl.DataContext>
        <design:DesignTimeModulesViewModel />
    </d:UserControl.DataContext>

    <!--ItemsSource="{Binding Source={StaticResource ModulesCollection}}"-->
    <ListBox ItemsSource="{Binding Modules}" ItemTemplate="{StaticResource ItemTemplate.Module}" Style="{StaticResource ListBox.Modules}" ItemContainerStyle="{DynamicResource ListBoxItemStyle}">
        <ListBox.GroupStyle>
            <GroupStyle>
                <GroupStyle.ContainerStyle>
                    <StaticResource ResourceKey="GroupItem.Module"/>
                </GroupStyle.ContainerStyle>
                <GroupStyle.Panel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </GroupStyle.Panel>
            </GroupStyle>
        </ListBox.GroupStyle>
    </ListBox>
</UserControl>



<!-- 
<UserControl x:Class="Poseidon.BackOffice.Core.Views.ModulesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:design="clr-namespace:Poseidon.BackOffice.Core.DesignTime"
             xmlns:core="clr-namespace:Poseidon.BackOffice.Core"
             xmlns:local="clr-namespace:Poseidon.BackOffice.Core.ViewModels"
             xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>

        <core:ModulesViewModelLocator x:Key="ModulesViewModel" />

        <CollectionViewSource x:Key="ModulesCollection" Source="{Binding Modules}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Priority" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Parent.Title"></PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        
        <DataTemplate DataType="{x:Type local:OfficeModuleViewModel}">
            <HeaderedContentControl>
                <HeaderedContentControl.Header>
                    <Button ToolTip="{Binding ToolTip}" HorizontalAlignment="Stretch" Background="Transparent" BorderThickness="0"
                            FocusVisualStyle="{x:Null}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ActivateCommand, RelativeSource={RelativeSource Self}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel Orientation="Vertical" Margin="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border Grid.ColumnSpan="2" Grid.RowSpan="2" Background="LightBlue" CornerRadius="5" />
                            <Image Margin="2"  Grid.RowSpan="2" Width="48" Height="48" Source="{Binding IconFileName}"/>
                            <TextBlock Margin="2" Grid.Column="1" Text="{Binding Title}" FontWeight="Bold" FontSize="24" />
                            <TextBlock Grid.Column="1" Grid.Row="1" Margin="2"  Text="{Binding Description}"/>
                        </Grid>
                    </StackPanel>
                    </Button>
                </HeaderedContentControl.Header>
                <HeaderedContentControl.Content>
                    <ListBox ItemsSource="{Binding Children}" FocusVisualStyle="{x:Null}" BorderThickness="0" />
                </HeaderedContentControl.Content>
            </HeaderedContentControl>
        </DataTemplate>

        
        <DataTemplate DataType="{x:Type local:ModuleViewModel}">
            <Button ToolTip="{Binding ToolTip}" HorizontalAlignment="Stretch" Background="Transparent" BorderThickness="0"
                    FocusVisualStyle="{x:Null}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ActivateCommand, RelativeSource={RelativeSource Self}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel Orientation="Vertical" Margin="23,0,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Image Grid.RowSpan="2" Width="24" Height="24" Source="{Binding IconFileName}"/>
                        <TextBlock Grid.Column="1" Text="{Binding Title}" FontWeight="Bold" />
                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Description}"/>
                    </Grid>
                    <ItemsControl ItemsSource="{Binding Children}" />
                </StackPanel>
            </Button>
        </DataTemplate>
        
        
        <ItemsPanelTemplate x:Key="ModuleListPanelTemplate">
            <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
        </ItemsPanelTemplate>

    </UserControl.Resources>

    
    <UserControl.DataContext>
        <Binding Path="ViewModel" Source="{StaticResource ModulesViewModel}" />
    </UserControl.DataContext>
    <d:UserControl.DataContext>
        <design:DesignTimeModulesViewModel />
    </d:UserControl.DataContext>

    
    <Grid>
        <ListBox ItemsSource="{Binding Source={StaticResource ModulesCollection}}" ItemsPanel="{StaticResource ModuleListPanelTemplate}" FocusVisualStyle="{x:Null}" />
    </Grid>
    
</UserControl>
-->
    